import sys
import math
import matplotlib.pyplot as plt
from bin_conv import *

def getNumber(fi):
    mySum = 0

    for i in range(len(fi)):
        mySum = mySum + int(fi[i])*2**(-i)

    return mySum

def fixedToFloat(fixed):
    if fixed[0] == '1':
        #negative number, do the 2er complement
        for i in range(len(fixed)):
            if fixed[i] != '.':
                if fixed[i] == '0':
                    fixed[i] == '1'
                if fixed[i] == '1':
                    fixed[i] == '0'

        return (-(2-getNumber(str(fixed[1]) + str(fixed[3:]))))
    else:
        #positive number
        return (getNumber(str(fixed[1]) + str(fixed[3:])))

data = sys.stdin.read()
_lines = list()
a = 0
b = 0

for c in data:
    b = b + 1
    if c == '\n':
        _lines.append(data[a:b-1])
        a = b

#the first 1 lines are not needed
lines = _lines[1:]
thetas = [-0.7853981633974483,-0.7696902001294993,-0.7539822368615503,-0.7382742735936014,-0.7225663103256524,-0.7068583470577035,-0.6911503837897545,-0.6754424205218055,-0.6597344572538566,-0.6440264939859076,-0.6283185307179586,-0.6126105674500096,-0.5969026041820606,-0.5811946409141118,-0.5654866776461627,-0.5497787143782138,-0.5340707511102648,-0.5183627878423158,-0.5026548245743669,-0.4869468613064179,-0.47123889803846897,-0.45553093477052,-0.439822971502571,-0.42411500823462206,-0.40840704496667307,-0.3926990816987241,-0.37699111843077515,-0.36128315516282616,-0.3455751918948772,-0.32986722862692824,-0.31415926535897926,-0.2984513020910303,-0.28274333882308134,-0.26703537555513235,-0.25132741228718336,-0.23561944901923448,-0.2199114857512855,-0.2042035224833365,-0.18849555921538752,-0.17278759594743853,-0.15707963267948966,-0.14137166941154067,-0.12566370614359168,-0.10995574287564269,-0.0942477796076937,-0.07853981633974472,-0.06283185307179584,-0.04712388980384685,-0.031415926535897865,-0.015707963267948877,0.0,0.015707963267948988,0.031415926535897976,0.04712388980384696,0.06283185307179595,0.07853981633974494,0.09424777960769393,0.1099557428756428,0.1256637061435918,0.14137166941154078,0.15707963267948977,0.17278759594743875,0.18849555921538763,0.20420352248333662,0.2199114857512856,0.23561944901923448,0.2513274122871836,0.26703537555513246,0.28274333882308156,0.29845130209103043,0.3141592653589793,0.3298672286269284,0.3455751918948773,0.3612831551628264,0.37699111843077526,0.39269908169872414,0.40840704496667324,0.4241150082346221,0.4398229715025712,0.4555309347705201,0.47123889803846897,0.48694686130641807,0.5026548245743669,0.518362787842316,0.5340707511102649,0.549778714378214,0.5654866776461629,0.5811946409141118,0.5969026041820609,0.6126105674500097,0.6283185307179588,0.6440264939859077,0.6597344572538566,0.6754424205218057,0.6911503837897546,0.7068583470577037,0.7225663103256525,0.7382742735936014,0.7539822368615505,0.7696902001294994]
sins = list()
coss = list()

for i in range(0, int(len(lines)-2), 2):
    coss.append(fixedToFloat(lines[i]))
    sins.append(fixedToFloat(lines[i+1]))


with open("basicCordicResults_Bits" + str(sys.argv[1]) + "_Iter" + str(sys.argv[2]) + ".txt","w") as f:
    f.write("theta;cos(theta);sin(theta)\n")
    for t,c,s in zip(thetas, coss, sins):
        f.write(str(t) + ';' + str(c) + ';' + str(s) + "\n")

'''
errors_sin= list()
errors_cos= list()
for t,c,s in zip(thetas, coss, sins):
    errors_cos.append(abs((math.cos(t) - c))*100)
    errors_sin.append(abs((math.sin(t) - s))*100)

print("Errors:")
print(thetas)
print(errors_cos)
print(errors_sin)

plt.plot(thetas, errors_cos,label='error cos')
plt.plot(thetas, errors_sin,label='error sin')
plt.xlabel('input angle in rad')
plt.ylabel('error in %')
plt.grid()
plt.legend()
plt.savefig("errors_fpax_"+str(B))
'''








